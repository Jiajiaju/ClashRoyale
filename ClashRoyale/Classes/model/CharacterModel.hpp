//
//  CharacterModel.hpp
//  ClashRoyale-mobile
//
//  Created by welove-jiajiaju on 21/01/2018.
//

#ifndef CharacterModel_hpp
#define CharacterModel_hpp

#include <stdio.h>

class CharacterModel{
public:
    std::string name;
    std::string rarity;
    int sightRange;
    int deployTime;
    int chargeRange;
    int speed;
    int hitpoints;
    int hitSpeed;
    int loadTime;
    int damage;
    int damageSpecial;
    int crownTowerDamagePercent;
    bool loadFirstHit;
    int stopTimeAfterAttack;
    int stopTimeAfterSpecialAttack;
    std::string projectile;
    std::string customFirstProjectile;
    int multipleProjectiles;
    int multipleTargets;
    bool allTargetsHit;
    int range;
    int minimumRange;
    int specialMinRange;
    int specialRange;
    int specialLoadTime;
    std::string specialReadyEffect;
    bool attacksGround;
    bool attacksAir;
    int deathDamageRadius;
    int deathDamage;
    int deathPushBack;
    int attackPushBack;
    int lifeTime;
    std::string projectileSpecial;
    std::string projectileEffect;
    std::string projectileEffectSpecial;
    int areaDamageRadius;
    bool targetOnlyBuildings;
    int specialAttackInterval;
    std::string buffOnDamage;
    int buffOnDamageTime;
    std::string startingBuff;
    int startingBuffTime;
    std::string fileName;
    std::string blueExportName;
    std::string blueTopExportName;
    std::string redExportName;
    std::string redTopExportName;
    bool useAnimator;
    std::string attachedCharacter;
    int attachedCharacterHeight;
    std::string damageEffect;
    std::string damageEffectSpecial;
    std::string deathEffect;
    std::string moveEffect;
    bool loopMoveEffect;
    std::string spawnEffect;
    bool crowdEffects;
    int shadowScaleX;
    int shadowScaleY;
    int shadowX;
    int shadowY;
    int shadowSkew;
    std::string shadowCustom;
    std::string shadowCustomLow;
    int pushback;
    bool ignorePushback;
    int scale;
    int collisionRadius;
    int mass;
    int tileSizeOverride;
    std::string areaBuff;
    int areaBuffTime;
    int areaBuffRadius;
    std::string healthBar;
    int healthBarOffsetY;
    bool showHealthNumber;
    int flyingHeight;
    bool flyDirectPaths;
    bool flyFromGround;
    std::string damageExportName;
    int growTime;
    int growSize;
    std::string morphCharacter;
    std::string morphEffect;
    bool healOnMorph;
    std::string areaEffectOnMorph;
    int morphTime;
    bool morphKeepTarget;
    std::string attackStartEffect;
    std::string attackStartEffectSpecial;
    int dashImmuneToDamageTime;
    std::string dashStartEffect;
    std::string dashEffect;
    int dashCooldown;
    int jumpHeight;
    int dashPushBack;
    int dashRadius;
    int dashDamage;
    std::string dashFilter;
    int dashConstantTime;
    int dashLandingTime;
    std::string landingEffect;
    int dashMinRange;
    int dashMaxRange;
    int jumpSpeed;
    std::string continuousEffect;
    int spawnStartTime;
    int spawnInterval;
    int spawnNumber;
    int spawnLimit;
    bool destroyAtLimit;
    int spawnPauseTime;
    int spawnCharacterLevelIndex;
    std::string spawnCharacter;
    std::string spawnProjectile;
    std::string spawnCharacterEffect;
    std::string spawnDeployBaseAnim;
    int spawnRadius;
    int deathSpawnCount;
    std::string deathSpawnCharacter;
    std::string deathSpawnProjectile;
    int deathSpawnRadius;
    int deathSpawnMinRadius;
    int spawnAngleShift;
    int deathSpawnDeployTime;
    bool deathSpawnPushback;
    std::string deathAreaEffect;
    bool deathInheritIgnoreList;
    bool kamikaze;
    int kamikazeTime;
    std::string kamikazeEffect;
    int spawnPathfindSpeed;
    std::string spawnPathfindEffect;
    std::string spawnPathfindMorph;
    int spawnPushback;
    int spawnPushbackRadius;
    std::string spawnAreaObject;
    int spawnAreaObjectLevelIndex;
    std::string chargeEffect;
    std::string takeDamageEffect;
    int projectileStartRadius;
    int projectileStartZ;
    int stopMovementAfterMS;
    int waitMS;
    bool dontStopMoveAnim;
    bool isSummonerTower;
    int noDeploySizeW;
    int noDeploySizeH;
    std::string tID;
    bool variableDamageLifeTime;
    int variableDamageTransitionTime;
    int variableDamage2;
    int variableDamageTime1;
    int variableDamage3;
    int variableDamageTime2;
    std::string targettedDamageEffect1;
    std::string targettedDamageEffect2;
    std::string targettedDamageEffect3;
    std::string damageLevelTransitionEffect12;
    std::string damageLevelTransitionEffect23;
    std::string flameEffect1;
    std::string flameEffect2;
    std::string flameEffect3;
    int targetEffectY;
    bool selfAsAoeCenter;
    bool hidesWhenNotAttacking;
    int hideTimeMs;
    bool hideBeforeFirstHit;
    bool specialAttackWhenHidden;
    std::string targetedHitEffect;
    std::string targetedHitEffectSpecial;
    int upTimeMs;
    std::string hideEffect;
    std::string appearEffect;
    int appearPushbackRadius;
    int appearPushback;
    std::string appearAreaObject;
    int manaCollectAmount;
    int manaGenerateTimeMs;
    int manaGenerateLimit;
    bool hasRotationOnTimeline;
    int turretMovement;
    int projectileYOffset;
    int chargeSpeedMultiplier;
    int deployDelay;
    std::string deployBaseAnimExportName;
    bool jumpEnabled;
    int sightClip;
    std::string areaEffectOnDash;
    int sightClipSide;
    int walkingSpeedTweakPercentage;
    int shieldHitpoints;
    int shieldDiePushback;
    std::string shieldLostEffect;
    std::string blueShieldExportName;
    std::string redShieldExportName;
    std::string loadAttackEffect1;
    std::string loadAttackEffect2;
    std::string loadAttackEffect3;
    std::string loadAttackEffectReady;
    int rotateAngleSpeed;
    int deployTimerDelay;
    bool retargetAfterAttack;
    int attackShakeTime;
    int visualHitSpeed;
    std::string ability;
    int burst;
    int burstDelay;
    bool burstKeepTarget;
    bool burstAffectAnimation;
    int activationTime;
    int attackDashTime;
    std::string loopingFilter;
    bool buildingTarget;
    bool spawnConstPriority;
    std::string buffWhenNotAttacking;
    int buffWhenNotAttackingTime;
    std::string buffWhenNotAttackingEffect;
    std::string buffWhenNotAttackingRemoveEffect;
};

#endif /* CharacterModel_hpp */
